%% START-UP
% add any dependencies to the path
addpath([pwd filesep 'utilities' filesep 'mooring']);
addpath([pwd filesep 'utilities' filesep 'CsvWriter']);

%% set the initial conditions for the "Mezzanine"
OPTIONS = [];
starSimFile = 'Mezzanine_v0.sim';
runOnHPC    = false;
nCPUs       = 4;

% coordinates at points along the mooring lines, and the buoyancy pods (plus anything else not a turbine)
% NOTE: avoid using colons, :, in these names (or else!)
probes.names = {'row-01 Mooring-01'; ...
                'row-01 Mooring-02'; ...
                'row-01 Mooring-03'; ...
                'row-01 Mooring-04'; ...
                'row-01 Mooring-05'; ...
                'row-01 Mooring-06'; ...
                'row-01 Mooring-07'; ...
                'row-01 Mooring-08'; ...
                'row-01 Mooring-09'; ...
                'row-01 Mooring-10'; ...
                'row-02 Mooring-01'; ...
                'row-02 Mooring-02'; ...
                'row-02 Mooring-03'; ...
                'row-02 Mooring-04'; ...
                'row-02 Mooring-05'; ...
                'row-02 Mooring-06'; ...
                'row-02 Mooring-07'; ...
                'row-02 Mooring-08'; ...
                'row-02 Mooring-09'; ...
                'row-02 Mooring-10'; ...
                'BuoyancyPod-01'; ...
                'BuoyancyPod-02'; ...
                'BuoyancyPod-03'; ...
                'BuoyancyPod-04'; ...
                'BuoyancyPod-05'; ...
                'BuoyancyPod-06'; ...
                'BuoyancyPod-07'; ...
                'BuoyancyPod-08'; ...
                'BuoyancyPod-09'; ...
                'BuoyancyPod-10'; ...
                'BuoyancyPod-11'; ...
                'BuoyancyPod-12'; ...
                'BuoyancyPod-13'};            
 probes.xyz =  [187.5		100.0000	44.5; ...
                187.5		133.3333	44.5; ...
                187.5		166.6667	44.5; ...
                187.5		200.0000	44.5; ...
                187.5		233.3333	44.5; ...
                187.5		266.6667	44.5; ...
                187.5		300.0000	44.5; ...
                187.5		333.3333	44.5; ...
                187.5		366.6667	44.5; ...
                187.5		400.0000    44.5; ...
                375		100.0000	44.5; ...
                375		133.3333	44.5; ...
                375		166.6667	44.5; ...
                375		200.0000	44.5; ...
                375		233.3333	44.5; ...
                375		266.6667	44.5; ...
                375		300.0000	44.5; ...
                375		333.3333	44.5; ...
                375		366.6667	44.5; ...
                375		400.0000    44.5; ...
                187.5   	100 		50; ...
                187.5   	175 		50; ...
                187.5   	250 		50; ...
                187.5   	325 		50; ...
                187.5   	400 		50; ...
                375    	137.5 		50; ...
                375    	212.5 		50; ...
                375    	287.5 		50; ...
                375    	362.5 		50; ...
                187.5      50          50; ...
                187.5      450       	50; ...
                375      	50          50; ...
                375      	450      	50];

% coordinates of turbines (center of rotor), and other properties
rotors.names  = {'turbine-01'; ...
                 'turbine-02'; ...
                 'turbine-03'; ...
                 'turbine-04'; ...
                 'turbine-05'; ...
                 'turbine-06'; ...
                 'turbine-07'; ...
                 'turbine-08'; ...
                 'turbine-09'};
rotors.tables = {'DOE_RM-1'; ...
                 'DOE_RM-1'; ...
                 'DOE_RM-1'; ...
                 'DOE_RM-1'; ...
                 'DOE_RM-1'; ...
                 'DOE_RM-1'; ...
                 'DOE_RM-1'; ...
                 'DOE_RM-1'; ...
                 'DOE_RM-1'};
% rotor_rpm,x,y,z,nx,ny,nz,rotor_radius,hub_radius,rotor_thick
rotors.data = [11.5,	187.5,	100.0,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	187.5,	175.0,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	187.5,	250.0,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	187.5,	325.0,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	187.5,	400.0,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	375.0,	137.5,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	375.0,	212.5,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	375.0,	287.5,	44.5,	1,	0,	0,	10,	1,	2; ...
               11.5,	375.0,	362.5,	44.5,	1,	0,	0,	10,	1,	2];

%% some bookkeeping
dir_input      = [pwd filesep 'inputs'];
dir_output     = [pwd filesep 'outputs'];
fileIn_probes  = [dir_input filesep 'probes.csv'];
fileIn_rotors  = [dir_input filesep 'rotors.csv'];             
fileOut_probes = [dir_output filesep 'probes-velocity.csv'];
fileOut_rotors = [dir_output filesep 'rotors-velocity.csv'];  

      
%% write the initial conditions to "input files" for the CFD model  
% construct the cell array
probes_vars = {'ProbeName','x', 'y','z'};
probes_data = horzcat(probes.names, num2cell(probes.xyz));
P           = vertcat(probes_vars, probes_data);
rotors_vars = {'name','table','rotor_rpm','x','y','z','nx','ny','nz','rotor_radius','hub_radius','rotor_thick'};
rotors_data = horzcat(rotors.names, rotors.tables, num2cell(rotors.data));
R           = vertcat(rotors_vars, rotors_data);
% write to CSV file
f = CsvWriter(fileIn_probes,'delimiter',',');
f.append(P);
f.close();
f = CsvWriter(fileIn_rotors,'delimiter',',');
f.append(R);
f.close();

%% run the CFD model for first time
% run STAR-CCM+
if runOnHPC
    system('./submit-job-Hyak.sh');
else
    system(['cp ' starSimFile ' runs.' starSimFile]);
    system(['rm log.' starSimFile]);
    system(['starccm+ -batch macros/main.java -np ' num2str(nCPUs) ' -licpath 1999@flex.cd-adapco.com -power -podkey $myPODkey -batch-report runs.' starSimFile ' 2>&1 | tee log.' starSimFile]);
end


couplingIters = 1;
for k = 1:couplingIters
    %% read the "output files" of the CFD model

    % PROBES: read/process the file header
    fid = fopen(fileOut_probes, 'r');
    header = fgetl(fid);
    fclose(fid);
    cols        = strsplit(header,',');
    probes_name = cell(size(cols,2)-1, 1);
    for n = 2:size(cols,2)
        token            = strtok(cols(n), ':');
        var              = token{1}(2:end);
        probes_name{n-1} = var;
    end
    % read the data section
    probes.vel = csvread(fileOut_probes,1);
    probes.vel = probes.vel(end,2:end)';    % only keep the last iteration
    % actually this appears to be in proper order! yay!
    % horzcat(probes_name, num2cell(probes.vel))


    % ROTORS: read/process the file header
    fid = fopen(fileOut_rotors, 'r');
    header = fgetl(fid);
    fclose(fid);
    cols        = strsplit(header,',');
    rotors_name = cell(size(cols,2)-1, 1);
    for n = 2:size(cols,2)
        token            = strtok(cols(n), '}');
        [token, remain]  = strtok(token, '{');
        rotors_name{n-1} = remain{1}(2:end);
    end
    % read the data section
    rotors.vel = csvread(fileOut_rotors,1);
    rotors.vel = rotors.vel(end,2:end)';    % only keep last iteration
    % actually this appears to be in proper order! yay!
    % horzcat(rotors_name, num2cell(rotors.vel))


    %% run the mooring model to calculate new positions
    new_xyz = mooring(OPTIONS, probes, rotors);


    %% compute the new rotor speed based on the updated inflow speeds
    new_rpm = zeros(numel(rotors.names),1);
    for n = 1:size(rotors.tables, 1)

        % read wind and rpm from the table
        file_perf = [dir_input filesep 'tables' filesep rotors.tables{n} '.csv'];

        perf_table = csvread(file_perf,1);
        wind = perf_table(:,1);
        rpm  = perf_table(:,4);

        new_rpm(n) = interp1(wind, rpm, rotors.vel(n));

        % this gets updated in STAR input file for the next iteration


    end


    %% write the new coordinates to file (for the next iteration of the CFD model)
    % construct the cell array
    probes_vars = {'ProbeName','x', 'y','z'};
    probes_data = horzcat(probes.names, num2cell(new_xyz.probes));
    P           = vertcat(probes_vars, probes_data);
    rotors_vars = {'name','table','rotor_rpm','x','y','z','nx','ny','nz','rotor_radius','hub_radius','rotor_thick'};
    rotors_data = horzcat(rotors.names, rotors.tables, num2cell(new_rpm), num2cell(new_xyz.rotors), num2cell(rotors.data(:,5:10)));
    R           = vertcat(rotors_vars, rotors_data);
    % write to CSV file
    f = CsvWriter(fileIn_probes,'delimiter',',');
    f.append(P);
    f.close();
    f = CsvWriter(fileIn_rotors,'delimiter',',');
    f.append(R);
    f.close();


    %% now can run STAR-CCM+ again with updated inputs
    if runOnHPC
        system('./submit-job-Hyak_updated.sh');
    else
        system(['starccm+ -batch macros/updateAndRun.java -np ' num2str(nCPUs) ' -licpath 1999@flex.cd-adapco.com -power -podkey $myPODkey -batch-report runs.' starSimFile ' 2>&1 | tee log.' starSimFile]);
    end
    
end



